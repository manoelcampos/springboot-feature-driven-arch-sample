<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.3</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>io.github.manoelcampos</groupId>
    <artifactId>springboot-reusable-arch-sample</artifactId>
    <version>1.0.0</version>
    <name>springboot-reusable-arch-sample</name>

    <properties>
        <java.version>23</java.version>
        <maven.compiler.version>3.14.0</maven.compiler.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Reactive HTTP Client (also used for API/controller tests) -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- OpenAPI (Swagger) libs -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-common</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>2.7.0</version>
        </dependency>
        <!-- end -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Provides fast application restarts, LiveReload, and configurations for enhanced development experience. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <!--
            Suporte for .env files
            https://github.com/paulschwarz/spring-dotenv
            -->
            <groupId>me.paulschwarz</groupId>
            <artifactId>spring-dotenv</artifactId>
            <version>4.0.0</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.12.0</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>24.0.0</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <!--
            Gera DTOs Java para classes Model automaticamente.
            As classes DTOs são geradas, no mesmo pacote da classe model anotada com @DTO,
            quando o projeto é compilado (mesmo diretamente pelo IDE, sem usar maven).

            https://github.com/manoelcampos/dtogen
            -->
            <groupId>io.github.manoelcampos</groupId>
            <artifactId>dtogen</artifactId>
            <version>2.1.5</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.11.2</version>
                <configuration>
                    <failOnError>false</failOnError>
                    <doclint>none</doclint>
                </configuration>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>javadoc</goal>
                        </goals>
                        <configuration>
                            <!--<additionalOptions>
                                &#45;&#45;processorpath target/classes
                                &#45;&#45;processor io.github.manoelcampos.dtogen.DTOProcessor
                            </additionalOptions>-->

                            <useStandardDocletOptions>false</useStandardDocletOptions>
                            <doclet>com.manticore.tools.xmldoclet.XmlDoclet</doclet>
                            <additionalOptions>-d "${project.build.directory}"</additionalOptions>
                            <docletArtifact>
                                <groupId>com.manticore-projects.tools</groupId>
                                <artifactId>xml-doclet</artifactId>
                                <version>2.0.1</version>
                                <!-- Uses the Uber jar that has all dependencies -->
                                <classifier>all</classifier>
                            </docletArtifact>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
